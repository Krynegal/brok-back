openapi: 3.0.0
info:
  title: Brok API
  description: A financial tracking API for brok.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request body
        '409':
          description: User with this email already exists
  /auth/login:
    post:
      tags:
        - auth
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
  /api/me:
    get:
      tags:
        - users
      summary: Get current user information
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
  /api/assets:
    get:
      tags:
        - assets
      summary: Get user's assets
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of assets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
        '401':
          description: Unauthorized
    post:
      tags:
        - assets
      summary: Create a new asset
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssetRequest'
      responses:
        '200':
          description: Asset created successfully
        '400':
          description: Invalid request body
  /api/assets/{id}:
    patch:
      tags:
        - assets
      summary: Update an existing asset
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssetRequest'
      responses:
        '200':
          description: Asset updated successfully
        '404':
          description: Asset not found
    delete:
      tags:
        - assets
      summary: Delete an asset
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Asset deleted successfully
        '404':
          description: Asset not found
  /api/assets/{id}/transactions:
    get:
      tags:
        - transactions
      summary: Get transactions for an asset
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the asset to retrieve transactions for
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A list of transactions for the asset
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
        '404':
          description: Asset not found
    post:
      tags:
        - transactions
      summary: Create a new transaction for an asset
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the asset to create a transaction for
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
      responses:
        '200':
          description: Transaction created successfully
        '400':
          description: Invalid request body
        '404':
          description: Asset not found
  /api/transactions/{id}:
    delete:
      tags:
        - transactions
      summary: Delete a transaction
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the transaction to delete
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Transaction deleted successfully
        '404':
          description: Transaction not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
    Asset:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
        balance:
          type: number
          format: decimal
        created_at:
          type: string
          format: date-time
    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
        asset_id:
          type: string
          format: uuid
        amount:
          type: number
          format: decimal
        type:
          type: string
          enum: [income, expense]
        description:
          type: string
        timestamp:
          type: string
          format: date-time
    RegisterRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
    CreateAssetRequest:
      type: object
      required: [name, type]
      properties:
        name:
          type: string
        type:
          type: string
    UpdateAssetRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        balance:
          type: number
          format: decimal
    CreateTransactionRequest:
      type: object
      required: [amount, type, description]
      properties:
        amount:
          type: number
          format: decimal
        type:
          type: string
          enum: [income, expense]
        description:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 